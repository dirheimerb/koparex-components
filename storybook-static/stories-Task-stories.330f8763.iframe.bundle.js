"use strict";(self.webpackChunkkoparex_components=self.webpackChunkkoparex_components||[]).push([[255],{"./src/stories/Task.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Archived:()=>Archived,Default:()=>Default,Pinned:()=>Pinned,default:()=>Task_stories});var react=__webpack_require__("./node_modules/react/index.js"),prop_types=__webpack_require__("./node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),__jsx=react.createElement;function Task(_ref){var _ref$task=_ref.task,id=_ref$task.id,title=_ref$task.title,state=_ref$task.state,onArchiveTask=_ref.onArchiveTask,onPinTask=_ref.onPinTask;return __jsx("div",{className:"list-item ".concat(state)},__jsx("label",{htmlFor:"checked","aria-label":"archiveTask-".concat(id),className:"checkbox"},__jsx("input",{type:"checkbox",disabled:!0,name:"checked",id:"archiveTask-".concat(id),checked:"TASK_ARCHIVED"===state}),__jsx("span",{className:"checkbox-custom",onClick:function onClick(){return onArchiveTask(id)}})),__jsx("label",{htmlFor:"title","aria-label":title,className:"title"},__jsx("input",{id:"title",type:"text",value:title,readOnly:!0,name:"title"})),"TASK_ARCHIVED"!==state&&__jsx("button",{className:"pin-button",onClick:function onClick(){return onPinTask(id)},id:"pinTask-".concat(id),"aria-label":"pinTask-".concat(id),key:"pinTask-".concat(id)},__jsx("span",{className:"icon-star"})))}Task.displayName="Task",Task.prototype={task:prop_types_default().shape({id:prop_types_default().string.isRequired,title:prop_types_default().string.isRequired,state:prop_types_default().string.isRequired}),onArchiveTask:prop_types_default().func,onPinTask:prop_types_default().func},Task.__docgenInfo={description:"",methods:[],displayName:"Task",props:{task:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n    id: string;\n    title: string;\n    state: string;\n}",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"title",value:{name:"string",required:!0}},{key:"state",value:{name:"string",required:!0}}]}},description:""},onArchiveTask:{required:!0,tsType:{name:"signature",type:"function",raw:"(id: string) => void",signature:{arguments:[{name:"id",type:{name:"string"}}],return:{name:"void"}}},description:""},onPinTask:{required:!0,tsType:{name:"signature",type:"function",raw:"(id: string) => void",signature:{arguments:[{name:"id",type:{name:"string"}}],return:{name:"void"}}},description:""}}};try{Task.displayName="Task",Task.__docgenInfo={description:"",displayName:"Task",props:{task:{defaultValue:null,description:"",name:"task",required:!0,type:{name:"{ id: string; title: string; state: string; }"}},onArchiveTask:{defaultValue:null,description:"",name:"onArchiveTask",required:!0,type:{name:"(id: string) => void"}},onPinTask:{defaultValue:null,description:"",name:"onPinTask",required:!0,type:{name:"(id: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Task.tsx#Task"]={docgenInfo:Task.__docgenInfo,name:"Task",path:"src/components/Task.tsx#Task"})}catch(__react_docgen_typescript_loader_error){}const Task_stories={title:"Task",component:Task,tags:["autodocs"],parameters:{layout:"fullscreen"}};var Default={args:{task:{id:"1Task",title:"Test Task",state:"TASK_INBOX"}}},Pinned={args:{task:{id:"pinnedtask2",title:"Pinned Task Test",state:"TASK_PINNED"}}},Archived={args:{task:{id:"archivedtask3",title:"Archived Task Test",state:"TASK_ARCHIVED"}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    task: {\n      id: '1Task',\n      title: 'Test Task',\n      state: 'TASK_INBOX'\n    }\n  }\n}",...Default.parameters?.docs?.source}}},Pinned.parameters={...Pinned.parameters,docs:{...Pinned.parameters?.docs,source:{originalSource:"{\n  args: {\n    task: {\n      id: 'pinnedtask2',\n      title: 'Pinned Task Test',\n      state: 'TASK_PINNED'\n    }\n  }\n}",...Pinned.parameters?.docs?.source}}},Archived.parameters={...Archived.parameters,docs:{...Archived.parameters?.docs,source:{originalSource:"{\n  args: {\n    task: {\n      id: 'archivedtask3',\n      title: 'Archived Task Test',\n      state: 'TASK_ARCHIVED'\n    }\n  }\n}",...Archived.parameters?.docs?.source}}}}}]);